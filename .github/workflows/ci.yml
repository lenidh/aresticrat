
on:
  push:
    branches-ignore:
      - 'wip/**'
      - 'pr/**'
  pull_request:
    types: [opened, synchronize]

env:
  MIN_TOOLCHAIN: 1.78.0

jobs:
  test:
    name: Test - ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Toolchain - ${{ env.MIN_TOOLCHAIN }}
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: ${{ env.MIN_TOOLCHAIN }}

          - name: Toolchain - stable
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: stable

          - name: Toolchain - nightly
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: nightly

          - name: Target - Linux-x86_64
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: ${{ env.MIN_TOOLCHAIN }}

          - name: Target - Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            toolchain: ${{ env.MIN_TOOLCHAIN }}

          - name: Target - macOS-x86_64
            runs-on: macos-latest
            target: x86_64-apple-darwin
            toolchain: ${{ env.MIN_TOOLCHAIN }}

    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        id: toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"
          toolchain: "${{ matrix.toolchain }}"
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
      - name: Override rust-toolchain.toml
        run: rustup override set ${{steps.toolchain.outputs.name}}
      - name: Install cargo-about
        run: cargo install --verbose --locked cargo-about@0.6.4
      - name: Run
        run: cargo test --verbose --locked --release --target ${{ matrix.target }}
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.MIN_TOOLCHAIN }}
          components: rustfmt
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
      - name: Run
        run: cargo fmt --verbose --all -- --check
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.MIN_TOOLCHAIN }}
          components: clippy
      - name: Setup cache
        uses: Swatinem/rust-cache@v2
      - name: Install cargo-about
        run: cargo install --verbose --locked cargo-about@0.6.4
      - name: Run
        run: cargo clippy --verbose -- -D warnings
